import cv2
import numpy as np
import matplotlib.pyplot as plt

src = cv2.imread('C:/Users/user/Desktop/segmentation_rsc/hand.png')
hsv = cv2.cvtColor(src, cv2.COLOR_BGR2GRAY)
lower = np.array([0, 10, 80], dtype = 'uint8')
upper = np.array([30, 255, 255], dtype = 'uint8') #사람손은 그레이로 바꾸면 구분이 안됨
dst = cv2.inRange(hsv, lower, upper)

src= cv2.cvtColor(src, cv2.COLR_RGB2GRAY)
plt.figure(figsize=(10, 10))
image1 = plt.subplot(1,2,1)
image1.set_title('original')
plt.axis('off')
plt.imshow(src)

image1 = plt.subplot(1,2,2)
image1.set_title('detected hand')
plt.axis('off')
plt.imshow(dst, cmap= 'gray')

#모포로지 연산으로 바이너리 구멍 메꾸기
# 세그멘테이션한 코드를 주심,세그멘테이션 해서 정확도 올려보기 혼자 해 보면서
#모포로지 후처리 할 떄 많이 씀!

kernel = cv2.setStructuringElement(shape = cv2.MOPPH_RECT
                                  ksize=(7,7))
mor_close = cv2.mophologyEx(dst, cv2.MOPPH_CLOSE, KERNEL
                            ITERATION = 5)
plt.figure(figsize = (20, 20))
image1 = plt.subplot(1,3,1)
image1.set_title('original')
plt.axis('off')
plt.imshow(src)

image2 = plt.subplot(1,3,2)
image2.set_title('detected hand')
plt.axis('off')
plt.imshow(mor_close. cmap= 'gray')

image1 = plt.subplot(1,3,3)
image3.set_title('final result')
plt.axis('off')
plt.imshow(mor_close. cmap= 'gray')



#시드를 주는 경우 - 내가 찾고자 하는 오브젝트의 표시하기. 조금 더 정확한 세그멘테이션을 위하여 
#오토세그멘테이션은 아님

